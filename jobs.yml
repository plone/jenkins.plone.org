# YAML based configuration for jobs on jenkins.plone.org.
#
# Use this configuration with jenkins-job-builder:
# https://github.com/openstack-infra/jenkins-job-builder
#
# To run it:
# git clone git@github.com:plone/jenkins.plone.org.git
# (change branch if needed)
# python setup.py develop # to install dependencies and make our code available
# jenkins-jobs --conf jenkins.ini test jobs -o output
#
# After running the above an output folder will be populated with jenkins jobs.
# See jenkins-job options to put into production or your server of choice.

- project:
    name: Plone 5.0
    jobs:
        - 'plone-5.0-python-2.7'
        - 'plone-5.0-python-2.7-robot'
        - 'plone-5.0-python-2.7-at'


- project:
    name: Plone 4.3
    python-version:
        - '2.7':
            pybinary: '$PYTHON27'
        - '2.6':
            pybinary: '$PYTHON26'
    jobs:
        - 'plone-4.3-python-{python-version}'


- project:
    name: PLIPs
    plip:
        - edit-member-ttw:
            buildout: plips/plip13350-edit-member-schema-ttw.cfg
    jobs:
        - 'plip-{plip}'


- project:
    name: Theme preview
    plone-version:
        - '5.0'
        - '4.3'
    jobs:
        - 'plone-{plone-version}-themetest'


- project:
    name: Plone.org themepreview
    jobs:
        - 'ploneorg-themepreview'


- project:
    name: Theme test on browsers
    browser:
        - 'android':
            browser-name: 'android'
            platform: 'Linux'
            version: '4.1'
        - 'chrome':
            browser-name: 'chrome'
            platform: 'Windows 8'
            version: '26'
        - 'firefox':
            browser-name: 'firefox'
            platform: 'Windows 8'
            version: '26'
        - 'ie10':
            browser-name: 'Internet Explorer'
            platform: 'Windows 8'
            version: '10'
        - 'ie11':
            browser-name: 'Internet Explorer'
            platform: 'Windows 8'
            version: '11'
        - 'ie8':
            browser-name: 'Internet Explorer'
            platform: 'Windows 7'
            version: '8'
        - 'ie9':
            browser-name: 'Internet Explorer'
            platform: 'Windows 7'
            version: '9'
        - 'ipad':
            browser-name: 'ipad'
            platform: 'OS X 10.9'
            version: '7'
        - 'iphone':
            browser-name: 'iPhone'
            platform: 'OS X 10.9'
            version: '7'
        - 'safari':
            browser-name: 'safari'
            platform: 'OS X 10.9'
            version: '7'
    jobs:
        - 'plone-5.0-themetest-{browser}'


- job-template:
    # Plone 4.3 job definition.
    # TODO:
    # - email-ext quite a few things
    name: 'plone-4.3-python-{python-version}'
    project-type: freestyle
    display-name: 'Plone 4.3 - Python {python-version}'
    concurrent: true
    disabled: false
    logrotate:
        daysToKeep: 60
        numToKeep: 100
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    notifications:
        - http:
            url: http://localhost/roboto/callback/corecommit?jk_job_id=cfcc93c8589240b493869bcea552f4f7_plone-4.3-python-{python-version}
            format: JSON

    parameters:
        - text:
            name: plonechanges
            default: http://jenkins.plone.org/roboto/static/changeset/noset
        - string:
            name: repo
            default: 'no repo'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '4.3'

    builders:
        - shell: |
            echo "Save to CHANGES.log"
            wget $plonechanges -O CHANGES.log

        - shell: |
            {pybinary} bootstrap.py -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/jenkins-alltests -1

        - shell: |
            i=`ls src`
            echo "[sources]" > snapshoot.cfg
            for j in $i;
                do
                    cd src/$j;
                    h=`git log -n1 --pretty=oneline | cut -d " " -f 1`
                    a=`git remote show origin | grep Fetch | cut -c 14-`
                    if [[ $a =~ "buildout.coredev.git" ]] ; then  echo "SVN $a"; else   echo "$j = git $a rev=$h" >> ../../snapshoot.cfg; fi
                    cd ../..; done

    publishers:
        - custom-junit

        - custom-archive:
            glob: 'CHANGES.log'

        - custom-email-ext

        - custom-history:
            file: CHANGES.log

        - robot:
            output-path: parts/jenkins-test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb


- job:
    # Plone 5.0 core tests job definition.
    # TODO:
    # - email-ext quite a few things
    name: plone-5.0-python-2.7
    project-type: freestyle
    display-name: 'Plone 5.0 - Python 2.7'
    concurrent: true
    disabled: false

    logrotate:
        daysToKeep: 60
        numToKeep: 100
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    notifications:
        - http:
            url: http://localhost/roboto/callback/corecommit?jk_job_id=deae59e52df042659f2276760c7819e6_plone-5.0-python-2.7
            format: JSON

    parameters:
        - text:
            name: plonechanges
            default: http://jenkins.plone.org/roboto/static/changeset/noset
        - string:
            name: repo
            default: 'no repo'

    properties:
        - custom-throttle:
            total: '7'
            enable: 'true'

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '5.0'

    builders:
        - shell: |
            echo "Save to CHANGES.log"
            wget $plonechanges -O CHANGES.log
            echo "REPO"
            echo $repo

        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/jenkins-alltests

    triggers:
        - github

    publishers:
        - aggregate-tests:
            include-failed-builds: true

        - custom-junit

        - custom-archive:
            glob: 'CHANGES.log,parts/jenkins-test/testreports/*.xml,src'

        - custom-history:
            file: CHANGES.log

        - fingerprint:
            files: 'parts/jenkins-test/testreports/*.xml'
            record-artifacts: true

        - custom-email-ext

        - trigger-parameterized-builds:
            - project: plone-5.0-python-2.7-at
              predefined-parameters: 'CHANGES=$CHANGES'
              no-parameters: true
            - project: plone-5.0-python-2.7-robot
              predefined-parameters: 'CHANGES=$CHANGES'
              no-parameters: true

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator


- job:
    # Plone 5.0 robot tests job definition.
    # TODO:
    # - email-ext quite a few things
    name: plone-5.0-python-2.7-robot
    project-type: freestyle
    display-name: 'Plone 5.0 - Python 2.7 - Robot Framework Tests'
    concurrent: true
    disabled: false

    logrotate:
        daysToKeep: 60
        numToKeep: 100
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    properties:
        - custom-throttle:
            total: '7'
            enable: 'true'

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '5.0'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c jenkins.cfg -v 2.2.1
            bin/buildout -c jenkins.cfg
            ROBOTSUITE_PREFIX=ONLYROBOT
            bin/jenkins-alltests -t ONLYROBOT --all

    triggers:
        - github

    publishers:
        - aggregate-tests:
            include-failed-builds: false

        - custom-archive:
            glob: 'CHANGES.log,parts/jenkins-test/testreports/*.xml,src'

        - fingerprint:
            files: 'parts/jenkins-test/testreports/*.xml'
            record-artifacts: true

        - custom-email-ext

        - robot:
            output-path: parts/jenkins-test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - trigger-parameterized-builds:
            - project: plone-5.0-python-2.7-at
              no-parameters: true

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb

        - inject:
            properties-content: ROBOTSUITE_PREFIX=ONLYROBOT


- job:
    # Plone 5.0 Archetypes tests job definition.
    # TODO:
    # - copy artifact doNotFingerprintArtifacts
    # - email-ext quite a few things
    name: plone-5.0-python-2.7-at
    project-type: freestyle
    display-name: 'Plone 5.0 - Python 2.7 - Archetypes'
    concurrent: true
    disabled: false
    node: 'Ubuntu14.04'

    logrotate:
        daysToKeep: 60
        numToKeep: 100
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    notifications:
        - http:
            url: http://localhost/roboto/callback/corecommit?jk_job_id=deae59e52df042659f2276760c7819e6_plone-5.0-python-2.7
            format: JSON

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '5.0'

    triggers:
        - github

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c jenkins.cfg -v 2.2.1
            bin/buildout -c jenkins.cfg
            bin/jenkins-alltests-at

        - copyartifact:
            project: plone-5.0-python-2.7
            filter: 'parts/jenkins-test/testreports/*.xml'
            which-build: upstream-build
            optional: true


    publishers:
        - custom-junit

        - custom-archive:
            glob: 'CHANGES.log,parts/jenkins-test/testreports/*.xml'

        - custom-email-ext

        - trigger-parameterized-builds:
            - project: plone-5.0-python-2.7-results
              no-parameters: true

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator


- job-template:
    # PLIPs jobs definition
    name: 'plip-{plip}'
    project-type: freestyle
    display-name: 'PLIP - {plip}'
    concurrent: true
    disabled: false
    logrotate:
        daysToKeep: 60
        numToKeep: 100
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    notifications:
        - http:
            url: http://localhost/roboto/callback/corecommit?jk_job_id=d1dcc66a21fc442199d48b39f3a31370_plone-5.0-python-2.7
            format: JSON

    properties:
        - custom-throttle:
            total: '7'
            enable: 'true'

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '5.0'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c {buildout}
            bin/buildout -c {buildout}
            bin/alltests --all
            bin/alltests-at

    publishers:
        - custom-junit

        - robot:
            output-path: parts/jenkins-test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb


- job-template:
    # Plone theme preview.
    # TODO:
    # - email-ext quite a few things
    name: 'plone-{plone-version}-themetest'
    project-type: freestyle
    display-name: 'Plone {plone-version} - Themetest'
    concurrent: true
    disabled: false
    node: Slave
    logrotate:
        daysToKeep: 20
        numToKeep: 30
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    notifications:
        - http:
            url: http://localhost
            format: JSON

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - git:
            url: git://github.com/plone/plone.themepreview.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true

    triggers:
        - timed: '@midnight'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c buildout.cfg
            bin/buildout -c buildout.cfg
            bin/sphinx-build source build

    publishers:
        - email-ext:
            recipients: tisto@plone.org, asko.soukka@iki.fi
            reply-to:
            content-type: default
            regression: true
            failure: false
            improvement: true
            still-failing: true
            fixed: true

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb


- job:
    # Plone.org theme preview.
    name: 'ploneorg-themepreview'
    project-type: freestyle
    display-name: 'Plone.org - theme preview'
    concurrent: true
    disabled: false
    node: Slave
    logrotate:
        daysToKeep: 20
        numToKeep: 30
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    notifications:
        - http:
            url: http://localhost
            format: JSON

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - git:
            url: git://github.com/plone/ploneorg.core.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true

    triggers:
        - timed: '@midnight'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py -c buildout.cfg
            bin/buildout -c buildout.cfg
            bin/sphinx-build src/plone.themepreview/source build

    publishers:
        - html-publisher:
            name: report
            dir: build
            files: "index.html"
            keep-all: false
            allow-missing: false

    wrappers:
        - custom-workspace-cleanup
        - port-allocator:
            names:
                - ZSERVER_PORT
        - xvfb:
            name: default
            screen: 1200x900x24
            debug: false
            timeout: 0
            shutdown: false

        - inject:
            properties-content: |
                ROBOT_CONFIGURE_PACKAGES=plone.app.widgets,ploneorg.core
                ROBOT_APPLY_PROFILES=ploneorg.core:default
                ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex


- job-template:
    # Plone 5.0 theme preview on browsers (using Sauce labs).
    name: 'plone-5.0-themetest-{browser}'
    project-type: freestyle
    display-name: 'Plone 5.0 - Theme test - {browser}'
    concurrent: true
    disabled: true
    logrotate:
        daysToKeep: 20
        numToKeep: 30
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    notifications:
        - http:
            url: http://localhost
            format: JSON

    properties:
        - throttle:
            max-total: '0'
            enabled: 'true'
            option: category
            categories:
                - sauce-labs-concurrent-builds-limit

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '5.0'

    triggers:
        - timed: '@midnight'

    builders:
        - shell: |
            # Set selenium grid variables
            export ROBOT_PORT=$ZSERVER_PORT
            export ROBOT_REMOTE_URL=$SAUCE_REMOTE_URL
            export ROBOT_BUILD_NUMBER=coredev-$BUILD_NUMBER
            export ROBOT_DESIRED_CAPABILITIES="platform:{platform},browserName:{browser-name},version:{version},tunnel-identifier:$NODE_NAME-$EXECUTOR_NUMBER"

            # This setups build-specific tunnel for Sauce Labs:
            rm -f CONNECTED
            if [ ! -f Sauce-Connect.jar ]
            then
                wget http://saucelabs.com/downloads/Sauce-Connect-latest.zip
                unzip Sauce-Connect-latest.zip
            fi
            java -jar Sauce-Connect.jar $SAUCE_USERNAME $SAUCE_ACCESS_KEY -i $NODE_NAME-$EXECUTOR_NUMBER -f CONNECTED 1>/dev/null &
            JAVA_PID=$!
            bash -c "while [ ! -f CONNECTED ]; do sleep 2; done"

            # This just runs robot tests as usual
            export ROBOT_APPLY_PROFILES=plone.app.contenttypes:default
            export ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex

            $PYTHON27 bootstrap.py -c buildout.cfg
            bin/buildout -c buildout.cfg
            bin/themepreview-build src/plone.themepreview/source build

            # Finally, this kills the tunnel
            kill -0 $JAVA_PID && kill $JAVA_PID || true

    publishers:
        - html-publisher:
            name: report
            dir: build
            files: "index.html"
            keep-all: false
            allow-missing: false

    wrappers:
        - custom-workspace-cleanup
        - timeout:
            timeout: 240
            type: absolute
        - port-allocator:
            names:
                - ZSERVER_PORT


###
# MACROS
###

- property:
    name: custom-throttle
    properties:
        - throttle:
            max-total: '{total}'
            enabled: '{enable}'
            option: project

- scm:
    name: buildout-coredev
    scm:
        - git:
            url: git://github.com/plone/buildout.coredev.git
            branches:
                - '{branch}'
            wipe-workspace: false
            tag-builds: true

- publisher:
    name: custom-junit
    publishers:
        - junit:
            results: parts/jenkins-test/testreports/*.xml
            keep-long-stdio: false

- publisher:
    name: custom-email-ext
    publishers:
        - email-ext:
            recipients: plone-testbot@lists.plone.org
            reply-to:
            content-type: default
            regression: true
            failure: false
            improvement: true
            still-failing: true
            fixed: true

- publisher:
    name: custom-archive
    publishers:
        - archive:
            artifacts: '{glob}'
            allow-empty: 'true'

- wrapper:
    name: custom-workspace-cleanup
    wrappers:
        - workspace-cleanup:
            dirmatch: true

- wrapper:
    name: custom-timeout
    wrappers:
        - timeout:
            timeout: 180
            type: absolute

- wrapper:
    name: custom-port-allocator
    wrappers:
        - port-allocator:
            names:
                - ZSERVER_PORT
                - FTPSERVER_PORT

- wrapper:
    name: custom-xvfb
    wrappers:
        - xvfb:
            name: default
            screen: 1024x768x24
            debug: false
            timeout: 0
            shutdown: false
