# YAML based configuration for jobs on jenkins.plone.org.
#
# Use this configuration with jenkins-job-builder:
# https://github.com/openstack-infra/jenkins-job-builder
#
# See [1] on how to use these jobs defined below.
#
# [1] http://jenkinsploneorg.readthedocs.org

###
# ANCHORS
###

- job-template: &plone-basic
    name: 'generic options shared across plone jobs'
    project-type: freestyle
    concurrent: true
    disabled: false

    properties:
        - custom-throttle:
            total: '7'
            enable: 'true'

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '5.0'

    logrotate:
        daysToKeep: 60
        numToKeep: 100
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - build-user-vars

- job-template: &plone
    name: 'plone triggered by github'

    triggers:
        - github

    <<: *plone-basic

- job-template: &plone-xvfb
    name: 'generic plone plus xvfb on it'

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb
        - build-user-vars

    <<: *plone-basic

###
# PROJECTS
###

- project:
    name: Release stuff
    jobs:
        - 'pending-releases'

- project:
    name: workflow
    jobs:
        - 'workflow-5.0'

- project:
    name: Pull requests
    plone-version:
        - '5.0'
        - '4.3'
    jobs:
        - 'pull-request-{plone-version}'

- project:
    name: Plone 5.0
    jobs:
        - 'plone-5.0-python-2.7'
        - 'plone-5.0-python-2.7-robot'
        - 'plone-5.0-python-2.7-at'


- project:
    name: Plone 4.3
    python-version:
        - '2.7':
            pybinary: '$PYTHON27'
        - '2.6':
            pybinary: '$PYTHON26'
    jobs:
        - 'plone-4.3-python-{python-version}'


- project:
    name: PLIPs
    plip:
        - 13260-step-by-step:
            buildout: plips/plip13260-step-by-step.cfg
            branch: 5.0
        - 13350-edit-member-schema-ttw:
            buildout: plips/plip13350-edit-member-schema-ttw.cfg
            branch: 5.0
        - 13770-portal-tools-removal:
            buildout: plips/plip13770-portal-tools-removal.cfg
            branch: 5.0
        - 20114-plone.api-integration:
            buildout: plips/plip20114-plone.api-integration.cfg
            branch: 5.0
        - 20256-social-tags:
            buildout: plips/plip20256-social-tags.cfg
            branch: 5.0
        - 14929-lxml-safehtml-transform:
            buildout: plips/plip14929-lxml-safehtml-transform.cfg
            branch: 5.0
        - ptc:
            buildout: plips/plip-ptc.cfg
            branch: 5.0
        - setuptools:
            buildout: plips/plip-setuptools.cfg
            branch: 5.0
        - noncmfdefault:
            buildout: plips/plip-nocmfdefault.cfg
            branch: 5.0
        - plip-portlet-manager:
            buildout: plips/plip-portlet-manager.cfg
            branch: 5.0
        - mosaic:
            buildout: plips/plip-mosaic.cfg
            branch: 5.0

    jobs:
        - 'plip-{plip}'


- project:
    name: Theme preview
    plone-version:
        - '5.0'
        - '4.3'
    jobs:
        - 'plone-{plone-version}-themetest'


- project:
    name: Plone.org themepreview
    jobs:
        - 'ploneorg-themepreview'


- project:
    name: Theme test on browsers
    browser:
        - 'android':
            browser-name: 'android'
            platform: 'Linux'
            version: '4.1'
        - 'chrome':
            browser-name: 'chrome'
            platform: 'Windows 8'
            version: '26'
        - 'firefox':
            browser-name: 'firefox'
            platform: 'Windows 8'
            version: '26'
        - 'ie10':
            browser-name: 'Internet Explorer'
            platform: 'Windows 8'
            version: '10'
        - 'ie11':
            browser-name: 'Internet Explorer'
            platform: 'Windows 8'
            version: '11'
        - 'ie8':
            browser-name: 'Internet Explorer'
            platform: 'Windows 7'
            version: '8'
        - 'ie9':
            browser-name: 'Internet Explorer'
            platform: 'Windows 7'
            version: '9'
        - 'ipad':
            browser-name: 'ipad'
            platform: 'OS X 10.9'
            version: '7'
        - 'iphone':
            browser-name: 'iPhone'
            platform: 'OS X 10.9'
            version: '7'
        - 'safari':
            browser-name: 'safari'
            platform: 'OS X 10.9'
            version: '7'
    jobs:
        - 'plone-5.0-themetest-{browser}'


- project:
    name: Dependencies
    kind:
        - cmf:
            bin: bin/jenkins-package-dependencies-cmf
        - formlib:
            bin: bin/jenkins-package-dependencies-formlib
        - pac:
            bin: bin/jenkins-package-dependencies-pac
        - grok:
            bin: bin/jenkins-package-dependencies-grok
    jobs:
        - plone-package-dependencies-{kind}


- project:
    name: per-package job
    package:
        - plone.app.discussion
    jobs:
        - 'package-{package}'


- project:
    name: ZTK (Zope Toolkit)
    pyversion:
        - '27':
            pybinary: '$PYTHON27'
        - '34':
            pybinary: 'python3.4'
    jobs:
        - 'ztk-{pyversion}'


- project:
    name: Zope2
    pyversion:
        - '27':
            pybinary: '$PYTHON27'
        - '34':
            pybinary: 'python3.4'
    jobs:
        - 'zope-{pyversion}'


- project:
    name: ZODB
    pyversion:
        - '27':
            pybinary: '$PYTHON27'
        - '34':
            pybinary: 'python3.4'
    jobs:
        - 'zodb-{pyversion}'


- project:
    name: CMF
    pyversion:
        - '27':
            pybinary: '$PYTHON27'
        - '34':
            pybinary: 'python3.4'
    jobs:
        - 'cmf-{pyversion}'


- project:
    name: QA scripts
    jobs:
        - docs-package-styleguide

###
# JOBS
###

- job-template:
    # Plone 4.3 job definition.
    name: 'plone-4.3-python-{python-version}'
    display-name: 'Plone 4.3 - Python {python-version}'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '4.3'

    triggers:
        - github

    builders:
        - shell: |
            {pybinary} bootstrap.py -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/jenkins-alltests -1

    publishers:
        - custom-junit

        - custom-email-ext

        - robot:
            output-path: parts/jenkins-test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

    <<: *plone-xvfb


- job:
    # Plone 5.0 core tests job definition.
    name: plone-5.0-python-2.7
    display-name: 'Plone 5.0 - Python 2.7'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/alltests --xml

    publishers:
        - custom-junit-new
        - custom-email-ext

    <<: *plone


- job:
    # Plone 5.0 robot tests job definition.
    name: plone-5.0-python-2.7-robot
    display-name: 'Plone 5.0 - Python 2.7 - Robot Framework Tests'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            ROBOTSUITE_PREFIX=ONLYROBOT
            bin/alltests -t ONLYROBOT --all --xml

    publishers:
        - custom-email-ext

        - robot:
            output-path: parts/test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb

        - inject:
            properties-content: ROBOTSUITE_PREFIX=ONLYROBOT

    <<: *plone


- job:
    # Plone 5.0 Archetypes tests job definition.
    name: plone-5.0-python-2.7-at
    display-name: 'Plone 5.0 - Python 2.7 - Archetypes'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/alltests-at --xml

    publishers:
        - custom-junit-new
        - custom-email-ext

        - custom-archive:
            glob: 'parts/test/testreports/*.xml'

    <<: *plone


- job-template:
    # PLIPs jobs definition
    name: 'plip-{plip}'
    display-name: 'PLIP - {plip}'

    scm:
        - buildout-coredev:
            branch: '{branch}'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c {buildout}
            bin/buildout -c {buildout}
            bin/alltests --xml --all
            bin/alltests-at --xml

    publishers:
        - custom-junit-new

        - robot:
            output-path: parts/test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to:
            content-type: default
            always: true
            failure: false
            subject: "Jenkins PLIP {plip} [${{BUILD_STATUS}}]"
            body: |
                Dear ${{BUILD_USER}},

                the Jenkins PLIP job for {plip} has finished:

                ${{BUILD_URL}}

                Yours truly,
                Jenkins

    <<: *plone-xvfb


- job-template:
    # Plone theme preview.
    name: 'plone-{plone-version}-themetest'
    display-name: 'Plone {plone-version} - Themetest'
    logrotate:
        daysToKeep: 20
        numToKeep: 30
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - git:
            url: git://github.com/plone/plone.themepreview.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true

    triggers:
        - timed: '@midnight'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c buildout.cfg
            bin/buildout -c buildout.cfg
            bin/sphinx-build source build

    publishers:
        - email-ext:
            recipients: tisto@plone.org, asko.soukka@iki.fi
            reply-to:
            content-type: default
            regression: true
            failure: false
            improvement: true
            still-failing: true
            fixed: true

    <<: *plone-xvfb


- job:
    # Plone.org theme preview.
    name: 'ploneorg-themepreview'
    display-name: 'Plone.org - theme preview'
    logrotate:
        daysToKeep: 20
        numToKeep: 30
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - git:
            url: git://github.com/plone/ploneorg.core.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true

    triggers:
        - timed: '@midnight'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py -c buildout.cfg
            bin/buildout -c buildout.cfg
            bin/sphinx-build src/plone.themepreview/source build

    publishers:
        - html-publisher:
            name: report
            dir: build
            files: "index.html"
            keep-all: false
            allow-missing: false

    wrappers:
        - custom-workspace-cleanup
        - port-allocator:
            names:
                - ZSERVER_PORT
        - xvfb:
            name: default
            screen: 1200x900x24
            debug: false
            timeout: 0
            shutdown: false

        - inject:
            properties-content: |
                ROBOT_CONFIGURE_PACKAGES=plone.app.widgets,ploneorg.core
                ROBOT_APPLY_PROFILES=ploneorg.core:default
                ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex

    <<: *plone


- job-template:
    # Plone 5.0 theme preview on browsers (using Sauce labs).
    name: 'plone-5.0-themetest-{browser}'
    display-name: 'Plone 5.0 - Theme test - {browser}'
    disabled: true
    logrotate:
        daysToKeep: 20
        numToKeep: 30
        artifactDaysToKeep: 3
        artifactNumToKeep: 10

    properties:
        - throttle:
            max-total: '0'
            enabled: 'true'
            option: category
            categories:
                - sauce-labs-concurrent-builds-limit

        - disk-usage

    triggers:
        - timed: '@midnight'

    builders:
        - shell: |
            # Set selenium grid variables
            export ROBOT_PORT=$ZSERVER_PORT
            export ROBOT_REMOTE_URL=$SAUCE_REMOTE_URL
            export ROBOT_BUILD_NUMBER=coredev-$BUILD_NUMBER
            export ROBOT_DESIRED_CAPABILITIES="platform:{platform},browserName:{browser-name},version:{version},tunnel-identifier:$NODE_NAME-$EXECUTOR_NUMBER"

            # This setups build-specific tunnel for Sauce Labs:
            rm -f CONNECTED
            if [ ! -f Sauce-Connect.jar ]
            then
                wget http://saucelabs.com/downloads/Sauce-Connect-latest.zip
                unzip Sauce-Connect-latest.zip
            fi
            java -jar Sauce-Connect.jar $SAUCE_USERNAME $SAUCE_ACCESS_KEY -i $NODE_NAME-$EXECUTOR_NUMBER -f CONNECTED 1>/dev/null &
            JAVA_PID=$!
            bash -c "while [ ! -f CONNECTED ]; do sleep 2; done"

            # This just runs robot tests as usual
            export ROBOT_APPLY_PROFILES=plone.app.contenttypes:default
            export ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex

            $PYTHON27 bootstrap.py -c buildout.cfg
            bin/buildout -c buildout.cfg
            bin/themepreview-build src/plone.themepreview/source build

            # Finally, this kills the tunnel
            kill -0 $JAVA_PID && kill $JAVA_PID || true

    publishers:
        - html-publisher:
            name: report
            dir: build
            files: "index.html"
            keep-all: false
            allow-missing: false

    wrappers:
        - custom-workspace-cleanup
        - timeout:
            timeout: 240
            type: absolute
        - port-allocator:
            names:
                - ZSERVER_PORT

    <<: *plone

- job:
    name: 'workflow-5.0'
    project-type: workflow
    definitions:
        - script:
            filename: 'flow.groovy'
        - scm:
            url: https://github.com/plone/jenkins.plone.org.git
            branches:
                - '*/master'


- job-template:
    name: 'pull-request-{plone-version}'
    description: |
        Manually test pull requests targeted at Plone 5 (i.e.those from packages on buildout.coredev sources.cfg).
        To trigger a job, just login with your GitHub account and provide the pull request URL.
        After the job is finished you will get an email about the result.

    parameters:
        - text:
            name: PULL_REQUEST_URL
            description: 'URL of the github pull request, e.g. "https://github.com/plone/plone.app.discussion/pull/56".'
            default: https://github.com/plone/plone.app.discussion/pull/56

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - python: |
            import json
            import os
            import urllib2

            pull_request_url = os.environ['PULL_REQUEST_URL']

            github_api_call = pull_request_url.replace('github.com', 'api.github.com/repos')
            github_api_call = github_api_call.replace('/pull/', '/pulls/')

            response = urllib2.urlopen(github_api_call)
            json_data = json.loads(response.read())

            org, branch = json_data['head']['label'].split(':')
            pkg = json_data['base']['repo']['name']

            with open('vars.properties', 'w') as f:
                f.write(u'PULL_REQUEST_PACKAGE_NAME = {{0}}\n'.format(pkg))
                f.write(u'PULL_REQUEST_FORK = {{0}}\n'.format(org))
                f.write(u'PULL_REQUEST_BRANCH = {{0}}\n'.format(branch))

        - inject:
            properties-file: vars.properties

        - shell: |
            if [ "{plone-version}" = "4.3" ]; then
                $PYTHON27 bootstrap.py -c jenkins.cfg
            else
                $PYTHON27 bootstrap.py --setuptools-version=8.3 -c jenkins.cfg
            fi
            if [ "$PULL_REQUEST_PACKAGE_NAME" != "buildout.coredev" ]; then
                sed -ie "s/^$PULL_REQUEST_PACKAGE_NAME\s.*/$PULL_REQUEST_PACKAGE_NAME = git git:\/\/github.com\/$PULL_REQUEST_FORK\/$PULL_REQUEST_PACKAGE_NAME.git branch=$PULL_REQUEST_BRANCH/g" sources.cfg
                bin/buildout -c jenkins.cfg install add-package-to-auto-checkout
                bin/add-package-to-auto-checkout $PULL_REQUEST_PACKAGE_NAME
            else
                # TODO(gforcada): allow to test remote branches (i.e. branches not in github.com/plone/buildout.coredev)
                git checkout $PULL_REQUEST_BRANCH
            fi
            bin/buildout -c jenkins.cfg
            bin/alltests --xml --all
            bin/alltests-at --xml

    publishers:
        - custom-junit-new

        - robot:
            output-path: parts/test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to:
            content-type: default
            always: true
            failure: false
            subject: "Jenkins Pull Request Job [${{BUILD_STATUS}}]: ${{PULL_REQUEST_PACKAGE_NAME}} ${{PULL_REQUEST_BRANCH}}"
            body: |
                Dear ${{BUILD_USER}},

                the Jenkins pull request job you requested has finished:

                ${{BUILD_URL}}

                Comment/merge the pull request:

                ${{PULL_REQUEST_URL}}

                Yours truly,
                Jenkins

    <<: *plone-xvfb


- job-template:
    name: plone-package-dependencies-{kind}
    display-name: 'Plone {kind} dependencies'

    triggers:
        - timed: "@daily"

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version 8.3 -c jenkins-package-dependencies.cfg
            bin/buildout -c jenkins-package-dependencies.cfg
            bin/jenkins-package-dependencies-{kind}
            bin/jenkins-package-dependencies-{kind}-imports

    publishers:
        - archive:
            artifacts: 'deps/*.???'
            allow-empty: 'false'

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: plone-package-dependencies
    display-name: 'Plone dependencies'

    triggers:
        - timed: "@daily"

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version 8.3 -c jenkins-package-dependencies.cfg
            bin/buildout -c jenkins-package-dependencies.cfg
            bin/jenkins-package-dependencies-text

    publishers:
        - archive:
            artifacts: 'package-dependencies.txt'
            allow-empty: 'false'

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    name: package-{package}
    display-name: '{package}'

    scm:
        - git:
            url: git://github.com/plone/{package}.git
            wipe-workspace: false

    builders:
        - shell: |
            wget https://raw.githubusercontent.com/plone/buildout.coredev/5.0/bootstrap.py -O bootstrap.py
            cat > jenkins.cfg << EOF
            [buildout]
            develop = .
            parts =
                code-analysis

            [code-analysis]
            recipe = plone.recipe.codeanalysis
            directory = .
            pre-commit-hook = False
            jenkins = True
            EOF
            $PYTHON27 bootstrap.py --setuptools-version 8.3 -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/code-analysis

    publishers:
        - violations:
            pep8:
                pattern: '**/parts/code-analysis/flake8.log'

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    name: ztk-{pyversion}
    display-name: Zope Toolkit py{pyversion}

    scm:
        - git:
            url: git://github.com/zopefoundation/zopetoolkit.git

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            {pybinary} bootstrap.py
            bin/buildout
            bin/test-ztk

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    name: zope-{pyversion}
    display-name: Zope2 py{pyversion}

    scm:
        - git:
            url: git://github.com/zopefoundation/Zope.git
            branches:
                - 'master'

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            cat > jenkins.cfg << EOF
            [buildout]
            extends = buildout.cfg
            parts +=
                jenkins-test

            [jenkins-test]
            recipe = collective.xmltestreport
            eggs =
                \${{alltests:eggs}}
            EOF
            {pybinary} bootstrap.py -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/jenkins-test --xml

    publishers:
        - custom-junit

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    # TODO: collective.xmltestreport does not spit out xml files for jenkins
    name: zodb-{pyversion}
    display-name: ZODB py{pyversion}

    scm:
        - git:
            url: git://github.com/zopefoundation/ZODB.git
            branches:
                - 'master'

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            cat > jenkins.cfg << EOF
            [buildout]
            extends = buildout.cfg
            parts +=
                jenkins-test

            [jenkins-test]
            recipe = collective.xmltestreport
            eggs = \${{test:eggs}}
            defaults = ['--auto-color', '--auto-progress']
            EOF
            {pybinary} bootstrap.py -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/jenkins-test --xml

    publishers:
        - custom-junit

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    name: cmf-{pyversion}
    display-name: CMF py{pyversion}

    scm:
        - svn:
            url: svn://svn.zope.org/repos/main/CMF/trunk

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            svn upgrade
            cat > jenkins.cfg << EOF
            [buildout]
            extends = buildout-zope213.cfg
            parts +=
                jenkins-test
            allow-picked-versions = true

            [jenkins-test]
            recipe = collective.xmltestreport
            eggs = \${{test:eggs}}
            defaults = ['--auto-color', '--auto-progress']
            EOF
            {pybinary} bootstrap.py -c jenkins.cfg
            bin/buildout -c jenkins.cfg
            bin/jenkins-test --xml

    publishers:
        - custom-junit

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: pending-releases
    display-name: Pending releases

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c release.cfg
            bin/buildout -c release.cfg install release
            bin/manage jenkins > changelog.txt

    publishers:
        - archive:
            artifacts: 'changelog.txt'
            allow-empty: 'false'

        - email-ext:
            recipients: 'eric@esteele.net'
            reply-to:
            content-type: default
            always: true
            failure: false
            subject: "Plone changelog"
            attachments: 'changelog.txt'
            body: |
                Dear Eric,

                see attached the changelog reported by ``bin/manage jenkins``.

                You can also see it online at:

                ${{BUILD_URL}}artifact/changelog.txt

                Yours truly,
                Jenkins

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: docs-package-styleguide

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            cat > docs.cfg << EOF
            [buildout]
            extends = core.cfg
            auto-checkout = *
            EOF
            sed -i 's/^Zope2/#Zope2/' sources.cfg
            sed -i 's/^ZODB/#ZODB/' sources.cfg
            sed -i 's/^five./#five./' sources.cfg
            sed -i 's/^z3c./#z3c./' sources.cfg
            sed -i 's/^Products.CMF/#Products.CMF/' sources.cfg
            sed -i 's/^Products.MailHost/#Products.MailHost/' sources.cfg
            $PYTHON27 bootstrap.py --setuptools-version=8.3 -c docs.cfg
            bin/buildout -c docs.cfg install test

        - python: |
            import os

            README_MESSAGE = '{0} missing top level README file\n'
            DOCS_MESSAGE = '{0} missing top level docs folder\n'

            with open('report.txt', 'w') as report_file:
                for pkg in os.listdir('src'):
                    path = 'src/{0}'.format(pkg)

                    if not os.path.isfile('{0}/README.rst'.format(path)) and \
                            not os.path.isfile('{0}/README.txt'.format(path)):
                        report_file.write(README_MESSAGE.format(pkg))

                    if not os.path.isdir('{0}/docs'.format(path)):
                        report_file.write(DOCS_MESSAGE.format(pkg))

    publishers:
        - archive:
            artifacts: 'report.txt'
            allow-empty: 'true'

    wrappers:
        - custom-workspace-cleanup

    <<: *plone


###
# MACROS
###

- property:
    name: custom-throttle
    properties:
        - throttle:
            max-total: '{total}'
            enabled: '{enable}'
            option: project

- scm:
    name: buildout-coredev
    scm:
        - git:
            url: git://github.com/plone/buildout.coredev.git
            branches:
                - '{branch}'
            wipe-workspace: false
            tag-builds: true

- publisher:
    name: custom-junit
    publishers:
        - junit:
            results: parts/jenkins-test/testreports/*.xml
            keep-long-stdio: false

- publisher:
    name: custom-junit-new
    publishers:
        - junit:
            results: parts/test/testreports/*.xml
            keep-long-stdio: false

- publisher:
    name: custom-email-ext
    publishers:
        - email-ext:
            recipients: plone-testbot@lists.plone.org
            reply-to:
            content-type: default
            regression: true
            failure: false
            improvement: true
            still-failing: true
            fixed: true

- publisher:
    name: custom-archive
    publishers:
        - archive:
            artifacts: '{glob}'
            allow-empty: 'true'

- wrapper:
    name: custom-workspace-cleanup
    wrappers:
        - workspace-cleanup:
            dirmatch: true

- wrapper:
    name: custom-timeout
    wrappers:
        - timeout:
            timeout: 180
            type: absolute

- wrapper:
    name: custom-port-allocator
    wrappers:
        - port-allocator:
            names:
                - ZSERVER_PORT
                - FTPSERVER_PORT

- wrapper:
    name: custom-xvfb
    wrappers:
        - xvfb:
            name: default
            screen: 1024x768x24
            debug: false
            timeout: 0
            shutdown: false
