# YAML based configuration for jobs on jenkins.plone.org.
#
# Use this configuration with jenkins-job-builder:
# https://github.com/openstack-infra/jenkins-job-builder
#
# See [1] on how to use these jobs defined below.
#
# [1] http://jenkinsploneorg.readthedocs.org

###
# ANCHORS
###

- job-template: &plone-basic
    name: 'generic options shared across plone jobs'
    project-type: freestyle
    concurrent: true
    disabled: false

    properties:
        - custom-throttle:
            total: '7'
            enable: 'true'

        - disk-usage

        - build-discarder:
            days-to-keep: 60
            num-to-keep: 100
            artifact-days-to-keep: 3
            artifact-num-to-keep: 10

    scm:
        - buildout-coredev:
            branch: '5.2'

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - build-user-vars
        - custom-github-api-key

- job-template: &plone
    name: 'plone triggered by github'

    triggers:
        - github

    <<: *plone-basic

- job-template: &plone-no-ports-no-xvfb
    name: 'generic plone without ports allocation nor xvfb'

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - build-user-vars
        - custom-github-api-key

    <<: *plone-basic

###
# PROJECTS
###

- project:
    name: Pull requests on Plone 5.2 for python 2.7
    plone-version:
        - '5.2':
            report-path: 'parts/test'
    jobs:
        - 'pull-request-{plone-version}'

- project:
    name: Pull requests on Plone 5.2 for python 3
    plone-version:
        - '5.2'
    py:
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
        - '3.6':
            python-version: 'Python3.6'
    jobs:
        - 'pull-request-{plone-version}-{py}'

- project:
    name: Pull requests on Plone 6 for python 3
    plone-version:
        - '6.0'
    py:
        - '3.9':
            python-version: 'Python3.9'
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
    jobs:
        - 'pull-request-{plone-version}-{py}'

- project:
    name: Test add-ons on on Plone 5.2 for python 2.7
    plone-version:
        - '5.2'
    jobs:
        - 'test-addon-{plone-version}'

- project:
    name: Test add-ons on python 3
    plone-version:
        - '6.0'
        - '5.2'
    py:
        - '3.9':
            python-version: 'Python3.9'
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
        - '3.6':
            python-version: 'Python3.6'
    jobs:
        - 'test-addon-{plone-version}-{py}'

- project:
    name: Plone 5.2 jobs on python 2.7
    plone-version:
        - '5.2'
    py:
        - '2.7':
            python-version: 'Python2.7'
    jobs:
        - 'plone-{plone-version}-python-{py}'

- project:
    name: Plone 5.2 jobs on pyhton 3.x
    plone-version:
        - '5.2'
    py:
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
        - '3.6':
            python-version: 'Python3.6'
    jobs:
        - 'plone-{plone-version}-python-{py}'

- project:
    name: Plone 6.0 jobs on pyhton 3.x
    plone-version:
        - '6.0'
    py:
        - '3.9':
            python-version: 'Python3.9'
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
    jobs:
        - 'plone-{plone-version}-python-{py}'

- project:
    name: Plone 5.2 jobs on python 2.7 (robot tests)
    plone-version:
        - '5.2'
    py:
        - '2.7':
            python-version: 'Python2.7'
    browser:
        - chrome
    jobs:
        - 'plone-{plone-version}-python-{py}-robot-{browser}'

- project:
    name: Plone 5.2 jobs on python 3.x (robot tests)
    plone-version:
        - '5.2'
    py:
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
        - '3.6':
            python-version: 'Python3.6'
    browser:
        - chrome
    jobs:
        - 'plone-{plone-version}-python-{py}-robot-{browser}'

- project:
    name: Plone 6.0 jobs on python 3.x (robot tests)
    plone-version:
        - '6.0'
    py:
        - '3.9':
            python-version: 'Python3.9'
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
    browser:
        - chrome
    jobs:
        - 'plone-{plone-version}-python-{py}-robot-{browser}'

- project:
    name: Translations on Plone 5.2 for python 2.7
    py:
        - '2.7':
            python-version: 'Python2.7'
    plone-version:
        - '5.2'
    jobs:
        - 'plone-{plone-version}-python-{py}-i18n'
        - 'plone-{plone-version}-python-{py}-i18n-find-missing'

- project:
    name: Translations on Plone 6.0 for python 3.x
    py:
        - '3.8':
            python-version: 'Python3.8'
    plone-version:
        - '6.0'
    jobs:
        - 'plone-{plone-version}-python-{py}-i18n'
        - 'plone-{plone-version}-python-{py}-i18n-find-missing'

- project:
    name: PLIPs
    plip:
        - mosaic:
            buildout: plips/plip-mosaic.cfg
            branch: '5.2'
        - 1485-react:
            buildout: plips/plip-1485.cfg
            branch: '5.2'
        - dx-siteroot:
            buildout: plips/plip-2454-dx-siteroot.cfg
            branch: '6.0'
        - 1486-redirection:
            buildout: plips/plip-1486-redirection.cfg
            branch: '5.2'
        - 1775-quickinstaller:
            buildout: plips/plip-1775-remove-qi.cfg
            branch: '6.0'
        - 2967-barceloneta-lts:
            buildout: plips/plip-2967-barceloneta-lts-source-checkouts.cfg
            branch: '6.0'
        - 3339-plone-autoinclude:
            buildout: plips/plip-3339-plone-autoinclude.cfg
            branch: '6.0'
        - 3211-mockup-redone:
             buildout: plips/plip-3211-mockup-redone.cfg
             branch: '6.0'
    py:
        - '3.9':
            python-version: 'Python3.9'
        - '3.8':
            python-version: 'Python3.8'
        - '3.7':
            python-version: 'Python3.7'
        - '3.6':
            python-version: 'Python3.6'
        - '2.7':
            python-version: 'Python2.7'
    jobs:
        - 'plip-{plip}-{py}'

- project:
    name: Theme preview
    plone-version:
        - '6.0'
    jobs:
        - 'plone-{plone-version}-themetest'

- project:
    name: QA scripts
    jobs:
        - qa-docs-package-styleguide
        - qa-docs-age
        - qa-undeclared-dependencies
        - qa-code-analysis

###
# JOBS
###

- job-template:
    name: plone-{plone-version}-python-{py}-i18n
    display-name: 'Plone {plone-version} - Python {py} - Translations'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    triggers:
        - timed: '@daily'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            clear: true
            nature: shell
            command:
                !include-raw: scripts/translations.sh

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout

    publishers:
        - custom-archive:
            glob: 'src/plone.app.locales/plone/app/locales/locales/reports/*.txt'

    <<: *plone-basic


- job-template:
    # Plone 5.x core tests job definition.
    name: plone-{plone-version}-python-{py}
    display-name: 'Plone {plone-version} - Python {py}'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            clear: true
            nature: shell
            command:
                !include-raw: scripts/5.x-tests.sh

    publishers:
        - custom-junit-new
        - custom-email-ext

    <<: *plone


- job-template:
    # Plone 5.x robot tests job definition.
    name: plone-{plone-version}-python-{py}-robot-{browser}
    display-name: 'Plone {plone-version} - Python {py} - Robot Framework Tests ({browser})'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            clear: true
            nature: shell
            command:
                !include-raw: scripts/5.x-robot.sh

    publishers:
        - custom-email-ext

        - robot:
            output-path: parts/test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-github-api-key

        - inject:
            properties-content: ROBOTSUITE_PREFIX=ONLYROBOT

    <<: *plone


- job-template:
    # Plone 5.x Archetypes tests job definition.
    name: plone-{plone-version}-python-{py}-at
    display-name: 'Plone {plone-version} - Python {py} - Archetypes'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            clear: true
            nature: shell
            command:
                !include-raw: scripts/5.x-at.sh

    publishers:
        - custom-junit-new
        - custom-email-ext

        - custom-archive:
            glob: 'parts/test/testreports/*.xml'

    <<: *plone


- job:
    # JavaScript mockup unittests.
    name: mockup
    display-name: 'Mockup JavaScript tests'

    scm:
        - git:
            url: git://github.com/plone/mockup.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true
            shallow-clone: true
            depth: 10
            do-not-fetch-tags: true
            ignore-commits-with-messages:
                - ci-skip

    builders:
        - shell:
            !include-raw: scripts/js.sh

    publishers:
        - junit:
            results: mockup/PhantomJS*/test-results.xml
            keep-long-stdio: false

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone-basic


- job-template:
    # PLIPs jobs definition
    name: 'plip-{plip}-{py}'
    display-name: 'PLIP - {plip} on {py}'

    scm:
        - buildout-coredev:
            branch: '{branch}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            clear: true
            nature: shell
            command:
                !include-raw: scripts/plips.sh

    publishers:
        - custom-junit-new

        - robot:
            output-path: parts/test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to: 'no-reply@jenkins.plone.org'
            content-type: default
            always: true
            failure: false
            subject: "Jenkins PLIP {plip} on {py} [${{BUILD_STATUS}}]"
            body:
                !include-raw: scripts/plips.email

    <<: *plone-no-ports-no-xvfb


- job-template:
    # Plone theme preview.
    name: 'plone-{plone-version}-themetest'
    display-name: 'Plone {plone-version} - Themetest'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

        - build-discarder:
            days-to-keep: 20
            num-to-keep: 30
            artifact-days-to-keep: 3
            artifact-num-to-keep: 10

    scm:
        - git:
            url: git://github.com/plone/plone.themepreview.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true
            shallow-clone: true
            depth: 10
            do-not-fetch-tags: true
            ignore-commits-with-messages:
                - ci-skip

    triggers:
        - timed: '@weekly'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: Python3.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/themetest.sh

    publishers:
        - html-publisher:
            name: report
            dir: build
            files: "index.html"
            keep-all: false
            allow-missing: false

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

        - inject:
            properties-content: |
                ROBOT_CONFIGURE_PACKAGES=plone.app.widgets,ploneorg.core
                ROBOT_APPLY_PROFILES=ploneorg.core:default
                ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex

    <<: *plone

- job-template:
    name: 'pull-request-{plone-version}'
    display-name: 'Pull Request {plone-version}'
    description: |
        Manually test pull requests targeted at Plone {plone-version} (i.e.those from packages on buildout.coredev sources.cfg).
        To trigger a job, just login with your GitHub account and provide the pull request URL.
        After the job is finished you will get an email about the result.

    parameters:
        - text:
            name: PULL_REQUEST_URL
            description: 'URLs of the github pull requests, see the documentation http://jenkinsploneorg.readthedocs.io/en/latest/run-pull-request-jobs.html'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            name: pull_request
            clear: true
            nature: shell
            command:
                pip install pygithub==1.43.2

        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            name: pull_request
            nature: python
            command:
                !include-raw-escape: scripts/pr-get-info-py2.py

        - inject:
            properties-file: vars.properties

        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            name: pull_request
            nature: shell
            command:
                !include-raw: scripts/pr-tests-py2.sh

    publishers:
        - junit:
            results: '{report-path}/testreports/*.xml'
            keep-long-stdio: false

        - robot:
            output-path: '{report-path}'
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to: 'no-reply@jenkins.plone.org'
            content-type: default
            always: true
            failure: false
            subject: "Jenkins Pull Request Job [${{BUILD_STATUS}}]: packages ${{PKGS}}"
            body:
                !include-raw: scripts/pr.email

    <<: *plone-no-ports-no-xvfb

- job-template:
    name: 'pull-request-{plone-version}-{py}'
    display-name: 'Pull Request {plone-version} on py{py}'
    description: |
        Manually test pull requests targeted at Plone {plone-version} on Python {py}.
        To trigger a job, just login with your GitHub account and provide the pull request URL.
        After the job is finished you will get an email about the result.

    parameters:
        - text:
            name: PULL_REQUEST_URL
            description: 'URLs of the github pull requests, see the documentation http://jenkinsploneorg.readthedocs.io/en/latest/run-pull-request-jobs.html'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            name: pull_request
            clear: true
            nature: shell
            command:
                pip install pygithub==1.43.2

        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            name: pull_request
            nature: python
            command:
                !include-raw-escape: scripts/pr-get-info.py

        - inject:
            properties-file: vars.properties

        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            name: pull_request
            nature: shell
            command:
                !include-raw: scripts/pr-tests.sh

    publishers:
        - junit:
            results: 'parts/test/testreports/*.xml'
            keep-long-stdio: false

        - robot:
            output-path: 'parts/test'
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to: 'no-reply@jenkins.plone.org'
            content-type: default
            always: true
            failure: false
            subject: "Jenkins Pull Request Job [${{BUILD_STATUS}}]: packages ${{PKGS}}"
            body:
                !include-raw: scripts/pr.email

    <<: *plone-no-ports-no-xvfb

- job-template:
    name: 'test-addon-{plone-version}'
    display-name: 'Test add-on against Plone {plone-version}'
    description: |
        Run an add-on tests with the current checkouts of Plone {plone-version}.
        To trigger a job, login with your GitHub account and provide the anonymous git URL of you add-on and, optionally, a branch.
        After the job is finished you will get an email about the result.

    parameters:
        - text:
            name: ADDON_URL
            description: 'URL of the add-on git repository, something like https://github.com/collective/collective.cover.git, see the documentation http://jenkinsploneorg.readthedocs.io/en/latest/run-add-on-jobs.html'

        - text:
            name: ADDON_BRANCH
            description: 'branch of the add-on that should be tested, if left blank, master branch is assumed'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            name: addon
            clear: true
            nature: shell
            command:
                pip install pygithub==1.26.0

        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            name: addon
            nature: python
            command:
                !include-raw-escape: scripts/addon-get-info.py

        - inject:
            properties-file: vars.properties

        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            name: addon
            nature: shell
            command:
                !include-raw: scripts/addon-tests.sh

    publishers:
        - junit:
            results: 'parts/test/testreports/*.xml'
            keep-long-stdio: false

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to: 'no-reply@jenkins.plone.org'
            content-type: default
            always: true
            failure: false
            subject: "[${{BUILD_STATUS}}]: ${{ADDON_NAME}} tested against {plone-version}"
            body:
                !include-raw: scripts/addon.email

    <<: *plone-basic

- job-template:
    name: 'test-addon-{plone-version}-{py}'
    display-name: 'Test add-on against Plone {plone-version} on {python-version}'
    description: |
        Run an add-on tests with the current checkouts of Plone {plone-version} on {python-version}.
        To trigger a job, login with your GitHub account and provide the anonymous git URL of you add-on and, optionally, a branch.
        After the job is finished you will get an email about the result.

    parameters:
        - text:
            name: ADDON_URL
            description: 'URL of the add-on git repository, something like https://github.com/collective/collective.cover.git, see the documentation http://jenkinsploneorg.readthedocs.io/en/latest/run-add-on-jobs.html'

        - text:
            name: ADDON_BRANCH
            description: 'branch of the add-on that should be tested, if left blank, master branch is assumed'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            name: addon
            clear: true
            nature: shell
            command:
                pip install pygithub==1.26.0

        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            name: addon
            nature: python
            command:
                !include-raw-escape: scripts/addon-get-info.py

        - inject:
            properties-file: vars.properties

        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            name: addon
            nature: shell
            command:
                !include-raw: scripts/addon-py3-tests.sh

    publishers:
        - junit:
            results: 'parts/test/testreports/*.xml'
            keep-long-stdio: false

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to: 'no-reply@jenkins.plone.org'
            content-type: default
            always: true
            failure: false
            subject: "[${{BUILD_STATUS}}]: ${{ADDON_NAME}} tested against Plone {plone-version} on {python-version}"
            body:
                !include-raw: scripts/addon-py3.email

    <<: *plone-basic


- job:
    name: plone-package-dependencies-ztc
    display-name: 'Plone ZopeTestCase dependencies'

    triggers:
        - timed: "@daily"

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/dependencies-ztc.sh

    publishers:
        - archive:
            artifacts: 'deps.txt'
            allow-empty: 'false'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    name: plone-{plone-version}-python-{py}-i18n-find-missing
    display-name: 'Plone {plone-version} - Python {py} - Find strings'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    triggers:
        - timed: '@weekly'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: '{python-version}'
            clear: true
            nature: shell
            command:
                !include-raw: scripts/i18n-find-untranslated.sh

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout

    publishers:
        - archive:
            artifacts: 'missing.txt'
            allow-empty: 'false'

        - email-ext:
            recipients: 'plone-i18n@lists.sourceforge.net'
            reply-to: 'no-reply@jenkins.plone.org'
            content-type: default
            always: true
            failure: false
            subject: "Jenkins: Plone {plone-version} strings not marked for translation"
            attachments: 'missing.txt'
            body: |
                Dear translators,

                see attached a report for strings not marked for translation on Plone {plone-version}.

                You can also see it online at:

                ${{BUILD_URL}}artifact/missing.txt

                Yours truly,
                Jenkins

    <<: *plone-basic

- job:
    name: qa-docs-package-styleguide

    triggers:
        - timed: '@weekly'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/docs-styleguide.sh

        - python: |
            import os

            README_MESSAGE = '{0} missing top level README file\n'
            DOCS_MESSAGE = '{0} missing top level docs folder\n'

            with open('report.txt', 'w') as report_file:
                for pkg in os.listdir('src'):
                    path = 'src/{0}'.format(pkg)

                    if not os.path.isfile('{0}/README.rst'.format(path)) and \
                            not os.path.isfile('{0}/README.txt'.format(path)):
                        report_file.write(README_MESSAGE.format(pkg))

                    if not os.path.isdir('{0}/docs'.format(path)):
                        report_file.write(DOCS_MESSAGE.format(pkg))

    publishers:
        - archive:
            artifacts: 'report.txt'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: qa-docs-age
    display-name: 'Documentation (age of files)'

    scm:
        - git:
            url: git://github.com/plone/documentation.git
            branches:
                - '5.2'
            wipe-workspace: false
            shallow-clone: true
            depth: 50
            do-not-fetch-tags: true
            ignore-commits-with-messages:
                - ci-skip

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            echo "" > report.tmp
            git ls-tree -r --name-only HEAD | while read filename; do
                echo "$(git log -1 --format="%ai" -- $filename) $filename" >> report.tmp
            done
            sort -M -k 2 report.tmp > report.txt

    publishers:
        - archive:
            artifacts: 'report.txt'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone-basic


- job:
    name: qa-undeclared-dependencies
    display-name: 'Undeclared dependencies'

    triggers:
        - timed: '@weekly'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/undeclared-dependencies.sh

    publishers:
        - archive:
            artifacts: 'deps.txt, lines.log, pkgs.log'
            allow-empty: 'true'

        - plot:
            - title: Undeclared dependencies
              num-builds: '500'
              yaxis: dependencies not declared
              style: line
              use-description: true
              group: plot
              series:
                  - file: lines.log
                    format: properties
            - title: Compliant packages
              num-builds: '500'
              yaxis: compliant packages
              style: line
              use-description: true
              group: plot
              series:
                  - file: pkgs.log
                    format: properties

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: qa-code-analysis
    display-name: 'Code analysis'

    triggers:
        - timed: '@daily'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: Python2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/qa-global-code-analysis.sh

    publishers:
        - violations:
            pep8:
                pattern: 'qa.txt'

        - archive:
            artifacts: 'qa.txt'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


###
# MACROS
###

- property:
    name: custom-throttle
    properties:
        - throttle:
            max-total: '{total}'
            enabled: '{enable}'
            option: project

- scm:
    name: buildout-coredev
    scm:
        - git:
            url: git://github.com/plone/buildout.coredev.git
            branches:
                - '{branch}'
            wipe-workspace: false
            tag-builds: true
            shallow-clone: true
            depth: 10
            do-not-fetch-tags: true
            ignore-commits-with-messages:
                - ci-skip

- publisher:
    name: custom-junit
    publishers:
        - junit:
            results: parts/jenkins-test/testreports/*.xml
            keep-long-stdio: false

- publisher:
    name: custom-junit-new
    publishers:
        - junit:
            results: parts/test/testreports/*.xml
            keep-long-stdio: false

- publisher:
    name: custom-email-ext
    publishers:
        - email-ext:
            recipients: plone-testbot@lists.plone.org
            reply-to: 'no-reply@jenkins.plone.org'
            content-type: default
            regression: true
            failure: false
            improvement: true
            still-failing: true
            fixed: true

- publisher:
    name: custom-archive
    publishers:
        - archive:
            artifacts: '{glob}'
            allow-empty: 'true'

- wrapper:
    name: custom-workspace-cleanup
    wrappers:
        - workspace-cleanup:
            dirmatch: true

- wrapper:
    name: custom-timeout
    wrappers:
        - timeout:
            timeout: 180
            type: absolute
            abort: true

- wrapper:
    name: custom-github-api-key
    wrappers:
        - credentials-binding:
          - text:
              credential-id: GITHUB_API_KEY
              variable: GITHUB_API_KEY
