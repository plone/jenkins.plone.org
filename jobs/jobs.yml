# YAML based configuration for jobs on jenkins.plone.org.
#
# Use this configuration with jenkins-job-builder:
# https://github.com/openstack-infra/jenkins-job-builder
#
# See [1] on how to use these jobs defined below.
#
# [1] http://jenkinsploneorg.readthedocs.org

###
# ANCHORS
###

- job-template: &plone-basic
    name: 'generic options shared across plone jobs'
    project-type: freestyle
    concurrent: true
    disabled: false

    properties:
        - custom-throttle:
            total: '7'
            enable: 'true'

        - disk-usage

        - build-discarder:
            days-to-keep: 60
            num-to-keep: 100
            artifact-days-to-keep: 3
            artifact-num-to-keep: 10

    scm:
        - buildout-coredev:
            branch: '5.2'

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - build-user-vars

- job-template: &plone
    name: 'plone triggered by github'

    triggers:
        - github

    <<: *plone-basic

- job-template: &plone-xvfb
    name: 'generic plone plus xvfb on it'

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb
        - build-user-vars

    <<: *plone-basic

###
# PROJECTS
###

#- project:
#    name: workflow
#    jobs:
#        - 'workflow-plone-5.0'

- project:
    name: Pull requests
    plone-version:
        - '5.2':
            report-path: 'parts/test'
        - '5.1':
            report-path: 'parts/test'
        - '5.0':
            report-path: 'parts/test'
        - '4.3':
            report-path: 'parts/jenkins-test'
    jobs:
        - 'pull-request-{plone-version}'

- project:
    name: Test add-ons
    plone-version:
        - '5.2'
        - '5.1'
        - '5.0'
        - '4.3'
    jobs:
        - 'test-addon-{plone-version}'

- project:
    name: Plone 5.x
    plone-version:
#        - '5.2'
        - '5.1'
        - '5.0'
    jobs:
        - 'plone-{plone-version}-python-2.7'
        - 'plone-{plone-version}-python-2.7-robot'
        - 'plone-{plone-version}-python-2.7-at'
        - 'plone-{plone-version}-js'

- project:
    name: Plone 5.2
    jobs:
        - 'plone-5.2-python-2.7'
        - 'plone-5.2-python-2.7-at'
        - 'plone-5.2-python-2.7-robot'

- project:
    name: Plone 4.3
    python-version:
        - '2.7':
            pybinary: '$PYTHON27'
        - '2.6':
            pybinary: '$PYTHON26'
    jobs:
        - 'plone-4.3-python-{python-version}'


- project:
    name: PLIPs
    plip:
        - mosaic:
            buildout: plips/plip-mosaic.cfg
            branch: 5.2
        - zope4:
            buildout: plip-zope4.cfg
            branch: 5.2
        - 1334-PlonePAS:
            buildout: plips/plip-1334-PlonePAS.cfg
            branch: 5.2
        - 1485-react:
            buildout: plips/plip-1485.cfg
            branch: 5.2
        - 2092-login:
            buildout: plips/plip-2092-login.cfg
            branch: 5.2
        - plone-restapi:
            buildout: plips/plip-2177-plone-restapi.cfg
            branch: 5.2
    jobs:
        - 'plip-{plip}'


- project:
    name: Theme preview
    plone-version:
        - '5.2'
        - '5.1'
        - '5.0'
        - '4.3'
    jobs:
        - 'plone-{plone-version}-themetest'


- project:
    name: Plone.org themepreview
    jobs:
        - 'ploneorg-themepreview'


- project:
    name: Dependencies
    kind:
        - cmf:
            bin: bin/jenkins-package-dependencies-cmf
    jobs:
        - plone-package-dependencies-{kind}


- project:
    name: per-package job
    package:
        - borg.localrole:
            top-level: 'borg'
        - plone.alterego:
            top-level: 'plone'
        - plone.api:
            top-level: 'src'
        - plone.app.blob:
            top-level: 'src'
        - plone.app.caching:
            top-level: 'plone'
        - plone.app.contentlisting:
            top-level: 'plone'
        - plone.app.contentrules:
            top-level: 'plone'
        - plone.app.contentmenu:
            top-level: 'plone'
        - plone.app.customerize:
            top-level: 'plone'
        - plone.app.discussion:
            top-level: 'plone'
        - plone.app.drafts:
            top-level: 'plone'
        - plone.app.intid:
            top-level: 'plone'
        - plone.app.iterate:
            top-level: 'plone'
        - plone.app.linkintegrity:
            top-level: 'plone'
        - plone.app.openid:
            top-level: 'plone'
        - plone.app.relationfield:
            top-level: 'plone'
        - plone.app.testing:
            top-level: 'plone'
        - plone.app.users:
            top-level: 'plone'
        - plone.app.vocabularies:
            top-level: 'plone'
        - plone.app.z3cform:
            top-level: 'plone'
        - plone.autoform:
            top-level: 'plone'
        - plone.behavior:
            top-level: 'plone'
        - plone.browserlayer:
            top-level: 'plone'
        - plone.caching:
            top-level: 'plone'
        - plone.event:
            top-level: 'plone'
        - plone.indexer:
            top-level: 'plone'
        - plone.intelligenttext:
            top-level: 'plone'
        - plone.namedfile:
            top-level: 'plone'
        - plone.recipe.codeanalysis:
            top-level: 'plone'
        - plone.registry:
            top-level: 'plone'
        - plone.resourceeditor:
            top-level: 'plone'
        - plone.schemaeditor:
            top-level: 'plone'
        - plone.subrequest:
            top-level: 'plone'
        - plone.testing:
            top-level: 'src'
        - plone.tiles:
            top-level: 'plone'
        - plone.transformchain:
            top-level: 'plone'
        - plonetheme.barceloneta:
            top-level: 'plonetheme'
        - Products.statusmessages:
            top-level: 'Products'
    jobs:
        - 'package-{package}'


- project:
    name: python 3.x support
    jobs:
        - 'py3-test'


- project:
    name: QA scripts
    jobs:
        - qa-docs-package-styleguide
        - qa-docs-age
        - qa-undeclared-dependencies
        - qa-code-analysis
        - qa-i18n-find-untranslated
        - qa-i18n-statistics

###
# JOBS
###

- job-template:
    # Plone 4.3 job definition.
    name: 'plone-4.3-python-{python-version}'
    display-name: 'Plone 4.3 - Python {python-version}'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '4.3'

    triggers:
        - github

    builders:
        - shell:
            !include-raw: scripts/4.3-tests.sh

    publishers:
        - custom-junit

        - custom-email-ext

        - robot:
            output-path: parts/jenkins-test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

    <<: *plone-xvfb


- job-template: &plone-core-job
    # Plone 5.x core tests job definition.
    name: plone-{plone-version}-python-2.7
    display-name: 'Plone {plone-version} - Python 2.7'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/5.x-tests.sh

    publishers:
        - custom-junit-new
        - custom-email-ext

    <<: *plone


- job:
    name: plone-5.2-python-2.7
    display-name: 'Plone 5.2 - Python 2.7'

    scm:
        - buildout-coredev:
            branch: '5.2'

    triggers:
        - github
        - timed: 'H H/12 * * *'

    <<: *plone-core-job


- job:
    name: plone-5.0-build-docker
    display-name: 'Plone 5.0 - Docker Image'

    builders:
        - shell: |
            curl -H "Content-Type: application/json" --data '{"docker_tag_name": "5.0"}' -X POST https://registry.hub.docker.com/u/ramonnb/docker-base-plone/trigger/bc86c734-4a33-497d-91d0-8eb1f689cf5b/

    wrappers:
        - custom-timeout

- job-template: &plone-core-job-robot
    # Plone 5.x robot tests job definition.
    name: plone-{plone-version}-python-2.7-robot
    display-name: 'Plone {plone-version} - Python 2.7 - Robot Framework Tests'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/5.x-robot.sh

    publishers:
        - custom-email-ext

        - robot:
            output-path: parts/test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - trigger:
            project: plone-5.0-build-docker
            threshold: SUCCESS

    wrappers:
        - custom-workspace-cleanup
        - custom-timeout
        - custom-port-allocator
        - custom-xvfb

        - inject:
            properties-content: ROBOTSUITE_PREFIX=ONLYROBOT

    <<: *plone


- job:
    name: plone-5.2-python-2.7-robot
    display-name: 'Plone 5.2 - Python 2.7 - Robot Framework Tests'

    scm:
        - buildout-coredev:
            branch: '5.2'

    triggers:
        - github
        - timed: 'H H/12 * * *'

    <<: *plone-core-job-robot


- job-template: &plone-core-job-at
    # Plone 5.x Archetypes tests job definition.
    name: plone-{plone-version}-python-2.7-at
    display-name: 'Plone {plone-version} - Python 2.7 - Archetypes'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/5.x-at.sh

    publishers:
        - custom-junit-new
        - custom-email-ext

        - custom-archive:
            glob: 'parts/test/testreports/*.xml'

    <<: *plone


- job:
    name: plone-5.2-python-2.7-at
    display-name: 'Plone 5.2 - Python 2.7 - Archetypes'

    scm:
        - buildout-coredev:
            branch: '5.2'

    triggers:
        - github
        - timed: 'H H/12 * * *'

    <<: *plone-core-job-at


- job-template:
    # Plone 5.x JavaScript mockup unittests.
    name: plone-{plone-version}-js
    display-name: 'Plone {plone-version} - JavaScript'

    scm:
        - git:
            url: git://github.com/plone/mockup.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true
            shallow-clone: true

    builders:
        - shell:
            !include-raw: scripts/5.x-js.sh

    publishers:
        - junit:
            results: mockup/PhantomJS*/test-results.xml
            keep-long-stdio: false

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    # PLIPs jobs definition
    name: 'plip-{plip}'
    display-name: 'PLIP - {plip}'

    scm:
        - buildout-coredev:
            branch: '{branch}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/plips.sh

    publishers:
        - custom-junit-new

        - robot:
            output-path: parts/test
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to:
            content-type: default
            always: true
            failure: false
            subject: "Jenkins PLIP {plip} [${{BUILD_STATUS}}]"
            body:
                !include-raw: scripts/plips.email

    <<: *plone-xvfb


- job-template:
    # Plone theme preview.
    name: 'plone-{plone-version}-themetest'
    display-name: 'Plone {plone-version} - Themetest'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

        - build-discarder:
            days-to-keep: 20
            num-to-keep: 30
            artifact-days-to-keep: 3
            artifact-num-to-keep: 10

    scm:
        - git:
            url: git://github.com/plone/plone.themepreview.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true

    triggers:
        - timed: '@weekly'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/themetest.sh

    publishers:
        - email-ext:
            recipients: tisto@plone.org, asko.soukka@iki.fi
            reply-to:
            content-type: default
            regression: true
            failure: false
            improvement: true
            still-failing: true
            fixed: true

    <<: *plone-xvfb


- job:
    # Plone.org theme preview.
    name: 'ploneorg-themepreview'
    display-name: 'Plone.org - theme preview'

    properties:
        - custom-throttle:
            total: '0'
            enable: '' # false

        - disk-usage

        - build-discarder:
            days-to-keep: 20
            num-to-keep: 30
            artifact-days-to-keep: 3
            artifact-num-to-keep: 10

    scm:
        - git:
            url: git://github.com/plone/ploneorg.core.git
            branches:
                - 'master'
            wipe-workspace: false
            tag-builds: true

    triggers:
        - timed: '@midnight'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                pip install -r requirements.txt
                buildout -c buildout.cfg
                bin/sphinx-build src/plone.themepreview/source build

    publishers:
        - html-publisher:
            name: report
            dir: build
            files: "index.html"
            keep-all: false
            allow-missing: false

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup
        - port-allocator:
            names:
                - ZSERVER_PORT
        - xvfb:
            name: default
            screen: 1200x900x24
            debug: false
            timeout: 0
            shutdown: false

        - inject:
            properties-content: |
                ROBOT_CONFIGURE_PACKAGES=plone.app.widgets,ploneorg.core
                ROBOT_APPLY_PROFILES=ploneorg.core:default
                ROBOT_INSTALL_PRODUCTS=Products.DateRecurringIndex

    <<: *plone


#- job:
#    name: 'workflow-plone-5.0'
#    project-type: workflow
#    definitions:
#        - script:
#            filename: 'flow.groovy'
#        - scm:
#            url: https://github.com/plone/jenkins.plone.org.git
#            branches:
#                - '*/master'


- job-template:
    name: 'pull-request-{plone-version}'
    display-name: 'Pull Request {plone-version}'
    description: |
        Manually test pull requests targeted at Plone {plone-version} (i.e.those from packages on buildout.coredev sources.cfg).
        To trigger a job, just login with your GitHub account and provide the pull request URL.
        After the job is finished you will get an email about the result.

    parameters:
        - text:
            name: PULL_REQUEST_URL
            description: 'URLs of the github pull requests, see the documentation http://jenkinsploneorg.readthedocs.io/en/latest/run-pull-request-jobs.html'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            name: pull_request
            clear: true
            nature: shell
            command:
                pip install pygithub==1.26.0

        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            name: pull_request
            nature: python
            command:
                !include-raw-escape: scripts/pr-get-info.py

        - inject:
            properties-file: vars.properties

        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            name: pull_request
            nature: shell
            command:
                !include-raw: scripts/pr-tests.sh

    publishers:
        - junit:
            results: '{report-path}/testreports/*.xml'
            keep-long-stdio: false

        - robot:
            output-path: '{report-path}'
            report-html: robot_report.html
            log-html: robot_log.html
            output-xml: robot_output.xml
            pass-threshold: 100.0
            unstable-threshold: 80.0
            only-critical: true
            other-files:
                - robot_*.png

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to:
            content-type: default
            always: true
            failure: false
            subject: "Jenkins Pull Request Job [${{BUILD_STATUS}}]: packages ${{PKGS}}"
            body:
                !include-raw: scripts/pr.email

    <<: *plone-xvfb

- job-template:
    name: 'test-addon-{plone-version}'
    display-name: 'Test add-on against Plone {plone-version}'
    description: |
        Run an add-on tests with the current checkouts of Plone {plone-version}.
        To trigger a job, login with your GitHub account and provide the anonymous git URL of you add-on and, optionally, a branch.
        After the job is finished you will get an email about the result.

    parameters:
        - text:
            name: ADDON_URL
            description: 'URL of the add-on git repository, something like https://github.com/collective/collective.cover.git, see the documentation http://jenkinsploneorg.readthedocs.io/en/latest/run-add-on-jobs.html'

        - text:
            name: ADDON_BRANCH
            description: 'branch of the add-on that should be tested, if left blank, master branch is assumed'

    scm:
        - buildout-coredev:
            branch: '{plone-version}'

    builders:
        - python:
            !include-raw-escape: scripts/addon-get-info.py

        - inject:
            properties-file: vars.properties

        - shell:
            !include-raw: scripts/addon-tests.sh

    publishers:
        - junit:
            results: 'parts/test/testreports/*.xml'
            keep-long-stdio: false

        - email-ext:
            recipients: "${{BUILD_USER_EMAIL}}"
            reply-to:
            content-type: default
            always: true
            failure: false
            subject: "[${{BUILD_STATUS}}]: ${{ADDON_NAME}} tested against {plone-version}"
            body:
                !include-raw: scripts/addon.email

    <<: *plone-basic

- job-template:
    name: plone-package-dependencies-{kind}
    display-name: 'Plone {kind} dependencies'

    triggers:
        - timed: "@daily"

    builders:
    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                sed -i 's/    mr.developer/    mr.developer\ngit-clone-depth = 100/' core.cfg
                pip install -r requirements.txt
                buildout -c jenkins-package-dependencies.cfg
                bin/jenkins-package-dependencies-{kind}
                bin/jenkins-package-dependencies-{kind}-imports

    publishers:
        - archive:
            artifacts: 'deps/*.???'
            allow-empty: 'false'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: plone-package-dependencies-ztc
    display-name: 'Plone ZopeTestCase dependencies'

    triggers:
        - timed: "@daily"

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                sed -i 's/    mr.developer/    mr.developer\ngit-clone-depth = 100/' core.cfg
                pip install -r requirements.txt
                buildout -c core.cfg
                grep -RI ZopeTestCase parts/packages > deps.txt.tmp || echo 0
                sed -i 's|parts/packages||' deps.txt.tmp
                grep -Ev '/(Testing|OFS|PloneTestCase|Zope2|ZPublisher)/' deps.txt.tmp > deps.txt

    publishers:
        - archive:
            artifacts: 'deps.txt'
            allow-empty: 'false'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: plone-package-dependencies
    display-name: 'Plone dependencies'

    triggers:
        - timed: "@daily"

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                sed -i 's/    mr.developer/    mr.developer\ngit-clone-depth = 100/' core.cfg
                pip install -r requirements.txt
                buildout -c jenkins-package-dependencies.cfg
                bin/jenkins-package-dependencies-text

    publishers:
        - archive:
            artifacts: 'package-dependencies.txt'
            allow-empty: 'false'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    name: package-{package}
    display-name: '{package}'

    scm:
        - git:
            url: git://github.com/plone/{package}.git
            wipe-workspace: false

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            name: package_qa
            clear: true
            nature: shell
            command:
                pip install pygithub==1.26.0

        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            name: package_qa
            nature: shell
            command:
                !include-raw: scripts/pkg-qa.sh

        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            name: package_qa
            nature: python
            command:
                !include-raw: scripts/pkg-qa-report.py

    publishers:
        - violations:
            pep8:
                pattern: '**/parts/code-analysis/flake8.log'

        - archive:
            artifacts: '**/parts/code-analysis/flake8.log'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job-template:
    name: py3-test
    display-name: 'Python 3'

    builders:
        - shell:
            !include-raw: scripts/pkg-py3.sh
        - python:
            !include-raw: scripts/pkg-py3-report.py

    publishers:
        - custom-junit-new

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: qa-i18n-find-untranslated
    display-name: i18n find untranslated

    triggers:
        - timed: '@weekly'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                sed -i 's/    mr.developer/    mr.developer\ngit-clone-depth = 100/' core.cfg
                pip install -r requirements.txt
                buildout -c experimental/i18n.cfg install i18n-find-untranslated i18ndude
                bin/i18n-find-untranslated details > missing.txt

    publishers:
        - archive:
            artifacts: 'missing.txt'
            allow-empty: 'false'

        - email-ext:
            recipients: 'plone-i18n@lists.sourceforge.net'
            reply-to:
            content-type: default
            always: true
            failure: false
            subject: "Jenkins: untranslated messages on Plone core"
            attachments: 'missing.txt'
            body: |
                Dear translators,

                see attached the log of files which have potential strings not marked for translation.

                You can also see it online at:

                ${{BUILD_URL}}artifact/missing.txt

                Yours truly,
                Jenkins

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone

- job:
    name: qa-i18n-statistics
    display-name: i18n statistics

    scm:
        - git:
            url: git://github.com/collective/plone.app.locales.git
            branches:
                - 'master'
            wipe-workspace: false

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            (for po in `find . -name "*.po"` ;
            do
              echo -n "$po:"
              LANG=en msgfmt -o /dev/null --statistics $po 2>&1 |tail -n1
            done) > raw_numbers.txt
            cd utils
            python statistics.py ../raw_numbers.txt > ../results.txt

    publishers:
        - archive:
            artifacts: '*.txt'
            allow-empty: 'false'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone

- job:
    name: qa-docs-package-styleguide

    triggers:
        - timed: '@weekly'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/docs-styleguide.sh

        - python: |
            import os

            README_MESSAGE = '{0} missing top level README file\n'
            DOCS_MESSAGE = '{0} missing top level docs folder\n'

            with open('report.txt', 'w') as report_file:
                for pkg in os.listdir('src'):
                    path = 'src/{0}'.format(pkg)

                    if not os.path.isfile('{0}/README.rst'.format(path)) and \
                            not os.path.isfile('{0}/README.txt'.format(path)):
                        report_file.write(README_MESSAGE.format(pkg))

                    if not os.path.isdir('{0}/docs'.format(path)):
                        report_file.write(DOCS_MESSAGE.format(pkg))

    publishers:
        - archive:
            artifacts: 'report.txt'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: qa-docs-age
    display-name: 'Documentation (age of files)'

    scm:
        - git:
            url: git://github.com/plone/documentation.git
            branches:
                - '5.0'
            wipe-workspace: false

    triggers:
        - timed: '@weekly'

    builders:
        - shell: |
            echo "" > report.tmp
            git ls-tree -r --name-only HEAD | while read filename; do
                echo "$(git log -1 --format="%ai" -- $filename) $filename" >> report.tmp
            done
            sort -M -k 2 report.tmp > report.txt

    publishers:
        - archive:
            artifacts: 'report.txt'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone-basic


- job:
    name: qa-undeclared-dependencies
    display-name: 'Undeclared dependencies'

    triggers:
        - timed: '@daily'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                # checkout all packages
                sed -i 's/    mr.developer/    mr.developer\ngit-clone-depth = 100/' jenkins-package-dependencies.cfg
                pip install -r requirements.txt
                buildout -c jenkins-package-dependencies.cfg install dependencies

                echo "" > deps.txt

                blacklist="Plone plone.themepreview ZODB3 diazo jquery.recurrenceinput.js mockup txtfilter"
                cd src
                for pkg in *;
                do
                    if [ `echo $blacklist | grep -c $pkg` -eq 0 ];
                    then
                        cd $pkg
                        echo $pkg >> ../../deps.txt
                        ../../bin/dependencychecker >> ../../deps.txt
                        cd ..
                    fi
                done

    publishers:
        - archive:
            artifacts: 'deps.txt'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


- job:
    name: qa-code-analysis
    display-name: 'Code analysis'

    triggers:
        - timed: '@daily'

    builders:
        - shining-panda:
            build-environment: virtualenv
            python-version: System-CPython-2.7
            clear: true
            nature: shell
            command:
                !include-raw: scripts/qa-global-code-analysis.sh

    publishers:
        - violations:
            pep8:
                pattern: 'qa.txt'

        - archive:
            artifacts: 'qa.txt'
            allow-empty: 'true'

    wrappers:
        - custom-timeout
        - custom-workspace-cleanup

    <<: *plone


###
# MACROS
###

- property:
    name: custom-throttle
    properties:
        - throttle:
            max-total: '{total}'
            enabled: '{enable}'
            option: project

- scm:
    name: buildout-coredev
    scm:
        - git:
            url: git://github.com/plone/buildout.coredev.git
            branches:
                - '{branch}'
            wipe-workspace: false
            tag-builds: true

- publisher:
    name: custom-junit
    publishers:
        - junit:
            results: parts/jenkins-test/testreports/*.xml
            keep-long-stdio: false

- publisher:
    name: custom-junit-new
    publishers:
        - junit:
            results: parts/test/testreports/*.xml
            keep-long-stdio: false

- publisher:
    name: custom-email-ext
    publishers:
        - email-ext:
            recipients: plone-testbot@lists.plone.org
            reply-to:
            content-type: default
            regression: true
            failure: false
            improvement: true
            still-failing: true
            fixed: true

- publisher:
    name: custom-archive
    publishers:
        - archive:
            artifacts: '{glob}'
            allow-empty: 'true'

- wrapper:
    name: custom-workspace-cleanup
    wrappers:
        - workspace-cleanup:
            dirmatch: true

- wrapper:
    name: custom-timeout
    wrappers:
        - timeout:
            timeout: 180
            type: absolute
            abort: true

- wrapper:
    name: custom-port-allocator
    wrappers:
        - port-allocator:
            names:
                - ZSERVER_PORT
                - FTPSERVER_PORT

- wrapper:
    name: custom-xvfb
    wrappers:
        - xvfb:
            name: default
            screen: 1024x768x24
            debug: false
            timeout: 0
            shutdown: false
