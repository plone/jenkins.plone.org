---
# Playbook for Jenkins Slave on Ubuntu 14.04 LTS

- hosts: all
  remote_user: root

  tasks:
    # Update all packages to the latest version
    - apt: upgrade=dist update_cache=yes
    # Java is needed in order to connect the Jenkins slaves to the master
    - apt: name=openjdk-7-jre state=present
    # Basics
    - apt: name=build-essential state=present
    - apt: name=htop state=present
    - apt: name=curl state=present
    # Remove zope.interface to avoid buildout problems
    #- apt: name=python-zope.interface state=absent
    # Time sync
    - apt: name=ntp state=present
    # Keep /tmp clean
    - apt: name=tmpreaper state=present
    # for add-apt-repository
    - apt: name=python-software-properties state=present
    # VCS
    - apt: name=git-core state=present
    - apt: name=subversion state=present
    - apt: name=libxml2-utils state=present
    # Word support
    - apt: name=wv state=present
    # PDF support
    - apt: name=poppler-utils state=present
    # bz2 support to extract pypi packages
    - apt: name=libbz2-dev state=present
    # Code analysis
    - apt: name=ohcount state=present
    - apt: name=sloccount state=present
    # Python 2.7
    - apt: name=python2.7 state=present
    - apt: name=python2.7-dev state=present
    # PIL
    # http://stackoverflow.com/questions/8915296/python-image-library-fails-with-message-decoder-jpeg-not-available-pil
    - name: Download PIP
      shell: curl -kLO https://bootstrap.pypa.io/get-pip.py
    - name: Install pip
      command: python2.7 get-pip.py
    - pip: name=Pillow
    # make sure the PIL/Pillow system packages are not installed
    - apt: name=python-imaging state=absent
    - apt: name=python-pil state=absent
    # install libs that Pillow needs
    - apt: name=zlib1g-dev state=present
    - apt: name=libfreetype6 state=present
    - apt: name=libfreetype6-dev state=present
    - apt: name=libjpeg-dev state=present
    - apt: name=libjpeg62-dev state=absent
    - apt: name=libjpeg8-dev state=present
    # Create symlinks so that Pillow can find the libs
    - name: libjpeg symlink
      file: src=/usr/lib/x86_64-linux-gnu/libjpeg.so dest=/usr/lib/libjpeg.so state=link
    - name: libfreetype symlink
      file: src=/usr/lib/x86_64-linux-gnu/libfreetype.so dest=/usr/lib/libfreetype.so state=link
    - name: libz symlink
      file: src=/usr/lib/x86_64-linux-gnu/libz.so dest=/usr/lib/libz.so state=link
    # Test Coverage
    - apt: name=enscript state=present
    # LXML
    - apt: name=python-lxml state=present
    - apt: name=libxslt1-dev state=present
    - apt: name=libxml2-dev state=present
    - apt: name=libxml2-utils state=present
    - apt: name=libssl-dev state=present
    - apt: name=libssl-doc state=present  # doc???
    - apt: name=zlib1g-dev state=present
    # xvfb
    - apt: name=xvfb state=present
    - apt: name=x11-apps state=present
    - apt: name=xfonts-100dpi state=present
    - apt: name=xfonts-75dpi state=present
    - apt: name=xfonts-scalable state=present
    - apt: name=xfonts-cyrillic state=present
    - apt: name=imagemagick state=present
    # firefox
    - apt: name=firefox state=present
    # nodejs
    - name: fetch node.js source
      get_url: url=http://nodejs.org/dist/node-latest.tar.gz dest=/tmp/
    - name: unpack node.js tarball
      command: tar zxf node-latest.tar.gz chdir=/tmp
    - name: lookup directory name
      shell: ls /tmp | grep node-v
      register: node_dir
    - name: configure
      shell: ./configure --prefix=/usr/local chdir=/tmp/{{ node_dir.stdout }}
    - name: make
      shell: /usr/bin/make chdir=/tmp/{{ node_dir.stdout }}
    - name: make install
      shell: /usr/bin/make install chdir=/tmp/{{ node_dir.stdout }}
    # npm
    - npm: name=bower global=yes state=present
    - npm: name=jshint global=yes state=present
    - npm: name=csslint global=yes state=present

    # Add user jenkins
    - user: name=jenkins
    # add public key
    - name: add user and create ssh key
      user: name=jenkins
    - name: download pubkey from Github and placed as authorized_keys
      get_url: url=https://raw.githubusercontent.com/plone/jenkins.plone.org/master/jenkins.plone.org.pub dest=/tmp/jenkins.authorized_keys
      delegate_to: 127.0.0.1
    - name: Create authorized_keys from the file that just downloaded
      authorized_key: user=jenkins key="{{ lookup('file', '/tmp/jenkins.authorized_keys') }}"

    # git config
    - name: git config
      template: src=etc/.gitconfig dest=/home/jenkins/.gitconfig owner=jenkins group=jenkins
    # buildout cache
    - name: Creates directory
      file: path=/home/jenkins/.buildout state=directory owner=jenkins group=jenkins
    - name: Creates directory
      file: path=/home/jenkins/.buildout/eggs state=directory owner=jenkins group=jenkins
    - name: Creates directory
      file: path=/home/jenkins/.buildout/downloads state=directory owner=jenkins group=jenkins
    - name: Buildout cache
      template: src=etc/default.cfg dest=/home/jenkins/.buildout/default.cfg owner=jenkins group=jenkins

    # Set Timezone to US/Pacific (default was: 'Etc/UTC')
    # XXX: Only a single test requires this in plone.app.form 2.2.x
    # https://github.com/plone/plone.app.form/blob/2.2.x/plone/app/form/widgets/datecomponents.txt
    - name: Set timezone to US/Pacific
      copy: content='US/Pacific'
            dest=/etc/timezone
            owner=root
            group=root
            mode=0644
            backup=yes
    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata

    # Python 2.6
    - apt_repository: repo='ppa:fkrull/deadsnakes' state=present
    - apt: name=python2.6 state=present
    - apt: name=python2.6-dev state=present
    # Python 2.6 - LXML
    - name: fetch lxml source
      get_url: url=http://pypi.python.org/packages/source/l/lxml/lxml-2.3.6.tar.gz dest=/tmp/
    - name: unpack lxml tarball
      command: tar zxf lxml-2.3.6.tar.gz chdir=/tmp
    - name: install lxml
      command: python2.6 setup.py install chdir=/tmp/lxml-2.3.6
    # Python 2.6 - BZ2
    - name: fetch bz2 source
      get_url: url=http://labix.org/download/python-bz2/python-bz2-1.1.tar.bz2 dest=/tmp/
    - name: unpack bz2 tarball
      command: tar xfvj python-bz2-1.1.tar.bz2 chdir=/tmp
    - name: install lxml
      command: python2.6 setup.py install chdir=/tmp/python-bz2-1.1
    # Python 2.6 - Imaging
    - apt: name=zlib1g-dev state=present
    - apt: name=libfreetype6 state=present
    - apt: name=libfreetype6-dev state=present
    - apt: name=libjpeg-dev state=present
    # https://unix.stackexchange.com/questions/105265/install-pil-pillow-via-pip-in-debian-testing-jessie
    - name: freetype symlink
      file: src=/usr/include/freetype2 dest=/usr/include/freetype state=link
    - name: fetch imaging source
      get_url: url=http://effbot.org/downloads/Imaging-1.1.7.tar.gz dest=/tmp/
    - name: unpack imaging tarball
      command: tar zxf Imaging-1.1.7.tar.gz chdir=/tmp
    - name: install imaging
      command: python2.6 setup.py install chdir=/tmp/Imaging-1.1.7

